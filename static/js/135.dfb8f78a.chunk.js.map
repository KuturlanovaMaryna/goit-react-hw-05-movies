{"version":3,"file":"static/js/135.dfb8f78a.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx","services/themoviedb.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btnGB\":\"MovieDetails_btnGB__9rowL\",\"container\":\"MovieDetails_container__Ys+c9\",\"poster\":\"MovieDetails_poster__yO7gD\",\"addInfoContainer\":\"MovieDetails_addInfoContainer__Rsjvd\",\"addInfoList\":\"MovieDetails_addInfoList__rUVXv\",\"addInfo\":\"MovieDetails_addInfo__lKFr+\"};","import React from 'react';\nimport { useEffect, useState, useRef } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { fetchMovieDetails } from 'services/themoviedb';\nimport Loader from 'components/Loader/Loader';\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n  const backLink = useRef(location.state?.from || '/');\n\n  useEffect(() => {\n    const searchMovieDetails = () => {\n      setLoading(true);\n\n      fetchMovieDetails(movieId)\n        .then(movieDetails => {\n          setMovieDetails(movieDetails);\n        })\n        .catch(error => {\n          console.log(error);\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    };\n    searchMovieDetails();\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return;\n  }\n\n  const {\n    title,\n    release_date,\n    popularity,\n    overview,\n    genres,\n    poster_path,\n    original_title,\n  } = movieDetails || {};\n\n  return (\n    <>\n      <Link to={backLink.current}>\n        <button type=\"button\" className={css.btnGB}>\n          Go back\n        </button>\n      </Link>\n      {loading && <Loader />}\n\n      {movieDetails && (\n        <div className={css.container}>\n          <img\n            className={css.poster}\n            width=\"300px\"\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                : `https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg`\n            }\n            alt={original_title}\n          />\n          <div className={css.information}>\n            <h1>\n              {title} ({release_date.slice(0, 4)})\n            </h1>\n            <p>User score: {popularity}</p>\n            <h2>Overview</h2>\n            <p>{overview}</p>\n            <h2>Genres</h2>\n            <ul>\n              {genres.map(genre => (\n                <li key={genre.id}>{genre.name}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      )}\n      <hr />\n      <div className={css.addInfoContainer}>\n        <h3>Additional information</h3>\n        <ul className={css.addInfoList}>\n          <li>\n            <Link to=\"cast\" className={css.addInfo}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" className={css.addInfo}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n        <hr />\n        <Outlet />\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from \"axios\";\n\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'b5c5f92c171eddbfa17290cd377a7ee0';\n\nexport const fetchTrendingMovies = async () => {\n    const response = await axios.get(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`) \n    return response.data.results;\n}\n\nexport const fetchMovieByName = async (query) => {\n    const {data} = await axios.get(`${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`) \n    return data.results;\n}\n\nexport const fetchMovieDetails = async (movieId) => {\n    const response = await axios.get(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}`) \n    return response.data;\n}\n\nexport const fetchMovieActors = async (movieId) => {\n    const response = await axios.get(`${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`) \n    return response.data.cast;\n}\n\nexport const fetchMovieReviews = async (movieId) => {\n    const response = await axios.get(`${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`) \n    return response.data.results;\n}"],"names":["_location$state","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movieDetails","setMovieDetails","_useState3","_useState4","loading","setLoading","location","useLocation","backLink","useRef","state","from","useEffect","fetchMovieDetails","then","catch","error","console","log","finally","_ref","title","release_date","popularity","overview","genres","poster_path","original_title","_jsxs","_Fragment","children","_jsx","Link","to","current","type","className","css","Loader","width","src","concat","alt","slice","map","genre","name","id","Outlet","BASE_URL","API_KEY","fetchTrendingMovies","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","sent","abrupt","data","results","stop","apply","arguments","fetchMovieByName","_ref2","_callee2","query","_yield$axios$get","_context2","_x","_ref3","_callee3","_context3","_x2","fetchMovieActors","_ref4","_callee4","_context4","cast","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}