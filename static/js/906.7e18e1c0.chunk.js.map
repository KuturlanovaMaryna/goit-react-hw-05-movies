{"version":3,"file":"static/js/906.7e18e1c0.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/MoviesPage/MoviesPage.module.css?7ea7","pages/MoviesPage/MoviesPage.jsx","services/themoviedb.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"MoviesPage_form__2deBf\",\"input\":\"MoviesPage_input__16dJ5\",\"btnSearch\":\"MoviesPage_btnSearch__wYYaN\",\"moviesSearchList\":\"MoviesPage_moviesSearchList__G8Wys\",\"moviesSearchItem\":\"MoviesPage_moviesSearchItem__+gvpZ\",\"moviesSearchLink\":\"MoviesPage_moviesSearchLink__Klwp6\"};","import React from 'react';\n\nimport Loader from '../../components/Loader/Loader';\nimport { fetchMovieByName } from '../../services/themoviedb';\nimport { useState, useEffect, useRef } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport css from './MoviesPage.module.css';\n\nconst MoviesPage = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchFilms, setSearchFilms] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const location = useLocation();\n  const moviesListRef = useRef([]);\n  const queryValue = searchParams.get('query');\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    const value = e.currentTarget.elements.moviesName.value;\n    setSearchParams({ query: value });\n  };\n\n  useEffect(() => {\n    const SearchMovies = async () => {\n      try {\n        if (!queryValue) {\n          return;\n        }\n        setLoading(true);\n\n        const searchResults = await fetchMovieByName(queryValue);\n        setSearchFilms(searchResults);\n        moviesListRef.current = searchResults;\n      } catch (error) {\n        console.log('error: ', error);\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    SearchMovies();\n  }, [queryValue]);\n\n  return (\n    <div>\n      <form onSubmit={onFormSubmit} className={css.form}>\n        <label className={css.label}>\n          <input\n            name=\"moviesName\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n            className={css.input}\n          />\n        </label>\n        <button type=\"submit\" className={css.btnSearch}>\n          <span>Search</span>\n        </button>\n      </form>\n      <div>\n        {loading && <Loader />}\n        {error !== null && (\n          <p>There is no movies with this request. Please, try again</p>\n        )}\n        <ul className={css.moviesSearchList}>\n          {searchFilms !== 0 &&\n            searchFilms.map(film => {\n              return (\n                <li key={film.id} className={css.moviesSearchItem}>\n                  <Link\n                    state={{ from: location }}\n                    to={`/movies/${film.id}`}\n                    className={css.moviesSearchLink}\n                  >\n                    {film.title}\n                  </Link>\n                </li>\n              );\n            })}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default MoviesPage;\n","import axios from \"axios\";\n\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'b5c5f92c171eddbfa17290cd377a7ee0';\n\nexport const fetchTrendingMovies = async () => {\n    const response = await axios.get(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`) \n    return response.data.results;\n}\n\nexport const fetchMovieByName = async (query) => {\n    const {data} = await axios.get(`${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`) \n    return data.results;\n}\n\nexport const fetchMovieDetails = async (movieId) => {\n    const response = await axios.get(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}`) \n    return response.data;\n}\n\nexport const fetchMovieActors = async (movieId) => {\n    const response = await axios.get(`${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`) \n    return response.data.cast;\n}\n\nexport const fetchMovieReviews = async (movieId) => {\n    const response = await axios.get(`${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`) \n    return response.data.results;\n}"],"names":["_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","_useState2","searchFilms","setSearchFilms","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","location","useLocation","moviesListRef","useRef","queryValue","get","useEffect","SearchMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","searchResults","_context","prev","next","abrupt","fetchMovieByName","sent","current","t0","console","log","message","finish","stop","apply","arguments","_jsxs","children","onSubmit","e","preventDefault","value","currentTarget","elements","moviesName","query","className","css","_jsx","name","type","autoComplete","autoFocus","placeholder","Loader","map","film","Link","state","from","to","concat","id","title","BASE_URL","API_KEY","fetchTrendingMovies","response","axios","data","results","_ref2","_callee2","_yield$axios$get","_context2","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","_x2","fetchMovieActors","_ref4","_callee4","_context4","cast","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}