{"version":3,"file":"static/js/975.59bd8ffc.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MoviesActors/MoviesActors.module.css?3e0d","components/MoviesActors/MoviesActors.jsx","services/themoviedb.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"actorsList\":\"MoviesActors_actorsList__KCASN\",\"actorsContainer\":\"MoviesActors_actorsContainer__D5BtJ\",\"actorContainer\":\"MoviesActors_actorContainer__tQfBV\"};","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchMovieActors } from 'services/themoviedb';\nimport Loader from 'components/Loader/Loader';\nimport css from './MoviesActors.module.css';\n\nconst MoviesActors = () => {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const onActorsOfMovie = () => {\n      setLoading(true);\n\n      fetchMovieActors(movieId)\n        .then(actors => {\n          setActors(actors);\n        })\n        .catch(error => {\n          console.log(error);\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    };\n\n    onActorsOfMovie();\n  }, [movieId]);\n\n  return (\n    <div className={css.actorsContainer}>\n      {loading && <Loader />}\n\n      <ul className={css.actorsList}>\n        {actors.map(({ id, profile_path, original_name, name, character }) => (\n          <li key={id} className={css.actorContainer}>\n            <img\n              width=\"200px\"\n              height=\"300px\"\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                  : `https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg`\n              }\n              alt={original_name}\n            />\n            <p>{name}</p>\n            <p>Character: {character}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\nexport default MoviesActors;\n","import axios from \"axios\";\n\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'b5c5f92c171eddbfa17290cd377a7ee0';\n\nexport const fetchTrendingMovies = async () => {\n    const response = await axios.get(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`) \n    return response.data.results;\n}\n\nexport const fetchMovieByName = async (query) => {\n    const {data} = await axios.get(`${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`) \n    return data.results;\n}\n\nexport const fetchMovieDetails = async (movieId) => {\n    const response = await axios.get(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}`) \n    return response.data;\n}\n\nexport const fetchMovieActors = async (movieId) => {\n    const response = await axios.get(`${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`) \n    return response.data.cast;\n}\n\nexport const fetchMovieReviews = async (movieId) => {\n    const response = await axios.get(`${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`) \n    return response.data.results;\n}"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","actors","setActors","_useState3","_useState4","loading","setLoading","useEffect","fetchMovieActors","then","catch","error","console","log","finally","_jsxs","className","css","children","_jsx","Loader","map","_ref","id","profile_path","original_name","name","character","width","height","src","concat","alt","BASE_URL","API_KEY","fetchTrendingMovies","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","sent","abrupt","data","results","stop","apply","arguments","fetchMovieByName","_ref2","_callee2","query","_yield$axios$get","_context2","_x","fetchMovieDetails","_ref3","_callee3","_context3","_x2","_ref4","_callee4","_context4","cast","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}